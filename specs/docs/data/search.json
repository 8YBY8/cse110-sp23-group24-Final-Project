{"list":[{"title":"CARD_DATA","link":"<a href=\"global.html#CARD_DATA\">CARD_DATA</a>","description":"This has the information for every single card, including location, meaning, and name."},{"title":"TarotCard","link":"<a href=\"TarotCard.html\">TarotCard</a>","description":"Create Shadow DOM"},{"title":"TarotCard#attributeChangedCallback","link":"<a href=\"TarotCard.html#attributeChangedCallback\">attributeChangedCallback</a>"},{"title":"TarotCard#chooseCard","link":"<a href=\"TarotCard.html#chooseCard\">chooseCard</a>","description":"In summary, the chooseCard() function updates the global state by adding the selected card\nto the selectedCards array and stores the updated state in the browser's localStorage. It also updates\nthe card image in the custom element's shadow DOM to reflect the selected card's image."},{"title":"TarotCard#closePopup","link":"<a href=\"TarotCard.html#closePopup\">closePopup</a>","description":"The following class is responsible for closing the card popup after the user\nclicks a card. On the third card whose popup is closed, the program will move\nfrom the select card page to the result page"},{"title":"TarotCard#connectedCallback","link":"<a href=\"TarotCard.html#connectedCallback\">connectedCallback</a>","description":"Call Render"},{"title":"TarotCard#render","link":"<a href=\"TarotCard.html#render\">render</a>","description":"It constructs the HTML structure for the custom element's shadow DOM and sets the\ninnerHTML property of the shadowRoot to update its content. It includes a CSS rule\nand creates an image element based on the attribute values. Additionally, it attaches a\nclick event listener to the card element to handle the card selection behavior, invoking the\nchooseCard() method."},{"title":"TarotCard.observedAttributes","link":"<a href=\"TarotCard.html#.observedAttributes\">observedAttributes</a>","description":"Call on card-back, card-name, and card-image attributes"},{"title":"getAnswer","link":"<a href=\"global.html#getAnswer\">getAnswer</a>","description":"Calls the answers array to see what the 8 ball responds with"},{"title":"handleManualRefresh","link":"<a href=\"global.html#handleManualRefresh\">handleManualRefresh</a>","description":"Purpose: Prevent staled state from persisting on page refresh"},{"title":"handleVolumeToggle","link":"<a href=\"global.html#handleVolumeToggle\">handleVolumeToggle</a>","description":"This function handles the volume on/off toggle\nbased on the current state of the button."},{"title":"init","link":"<a href=\"global.html#init\">init</a>","description":"clears local storage of FutureNowState item and creates a new states for future"},{"title":"init","link":"<a href=\"global.html#init\">init</a>","description":"This function initializes and populate a card deck or card display\nusing the CARD_DATA components from card-meanings.js. It checks the presence\nof a state in the local storage, shuffles the cards, and dynamically\ncreates tarot-card elements with specific attributes to display the\nshuffled cards in the cardsContainer element."},{"title":"shuffleArray","link":"<a href=\"global.html#shuffleArray\">shuffleArray</a>","description":"Randomly shuffles the cards"}]}